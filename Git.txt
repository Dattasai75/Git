GIT: It is a software and is often used along with remote repositories like GitHub,GitLab fro developing,managing and distributing code. Git is a distributed revision control and source code management system with an emphasis on speed. Git was initially designed and developed by Linus Torvalds for Linux kernel development. G
Git Life Cycle:  
			git add				git commit			git push
working directory----------------->staging area--------------------->local repository------------------>Remote repository
			git reset									git pull	 |
working directory<-------------------staging area                           local repository    <------------------------|

VCS: Version Control System (VCS) is a software that helps software developers to work together and maintain a complete history of their work.

CVCS:Centralized version control system (CVCS) uses a central server to store all files and enables team collaboration. 

DVCS: Distributed version control systems:DVCS clients not only check out the latest snapshot of the directory but they also fully mirror the repository. If the sever goes down, then the repository from any client can be copied back to the server to restore it. Every checkout is a full backup of the repository. 

git commands:
1)git init: Creates a new empty repo in your current directory.

2)git add . :Adds all python files in the current directory to the staging area.

3)git commit: Records everything in the staging area to your repository. The default text editor will prompt you for a commit message
3.1) git commit -m "Commit message": Records everything in the staging area to your repository with the commit message "Commit message"
3.2)git commit --amend:	Modify last commit instead of creating a new one. Useful for fixing small mistakes.

4.git branch --set-upstream-to <origin>:By default, fetch, pull and push will operate on the origin repo

5)git push:	Incorporates changes from local repo into 'origin'. Push operation copies changes from a local repository instance to a remote one. This is used to store the changes permanently into the Git repository. This is same as the commit operation in Subversion.

5.1)git push <repo> <branch>:Incorporates changes from local repo into <repo> <branch>

6)git pull:Incorporates changes from 'origin' into local repo. Pull operation copies the changes from a remote repository instance to a local one. The pull operation is used for synchronization between two repository instances. This is same as the update operation in Subversion.
6.1)git pull <repo> <branch>:	Incorporates changes from <repo> <branch> into local repo.

7.git branch:List branches.
7.1)git branch <branch-name>:Create new branch <branch-name

8.git checkout -b p1:Switch to editing branch p1

9.git clone URL:Copies a remote repository into your current directory.

10)git merge <branch-name>:Merge <branch-name> into current branch.

11)git fetch:Gets status of 'origin'. git fetch does not change your working directory or local repository (see git pull). 
11.1)git fetch <repo> <branch>:	Get status of <repo> <branch>.

12)git log:Prints commit history of repo.
12.1)git log <filename>:Prints commit history of <filename>.

13)git reset:Removes all files from staging area. (Opposite of git add)
13.1)git reset <filename>: Removes <filename> from staging area.

14)Clone
Clone operation creates the instance of the repository. Clone operation not only 
checks out the working copy, but it also mirrors the complete repository. Users
can perform many operations with this local repository. The only time 
networking gets involved is when the repository instances are being 
synchronized.

15)add:
 some cases, you may want to change some of your existing files. In other cases, you may want to add untracked files to your repository.

In both cases, you will need to use the same Git command : Git Add.

The easiest way to add all files to your Git repository is to use the “git add” command followed by the “-A” option for “all”.

$ git add -A                       

$ git add .                        (at the root of your project folder)


The git checkout command is used to switch between branches in a repository. 
$ git checkout <branchname>  


Advantages of Git:
Free and open source
Fast and small
Easier branching

